{"version":3,"sources":["App.js","index.js"],"names":["App","_this$props","this","props","items","winner","counter","_this$props2","setItems","getRestarted","react_default","a","createElement","className","concat","map","item","i","key","onClick","React","Component","connect","state","restart","dispatch","index","type","bool","winningCombinations","getWinner","newItems","filteredCombo","filter","combo","length","store","createStore","arguments","undefined","action","value","Object","assign","toConsumableArray","defineProperty","setArrayImmutable","objectSpread","composeWithDevTools","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.71fb5ae4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const { items, winner, counter } = this.props;\r\n    const { setItems, getRestarted } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div\r\n          className={`Heading ${(winner || counter === 9) && \"Heading__box\"}`}\r\n        >\r\n          <h1 className={`${(winner || counter === 9) && \"Heading_End\"}`}>\r\n            {winner\r\n              ? `${winner} won`\r\n              : counter !== 9 && counter % 2 === 0\r\n              ? \"X\"\r\n              : counter !== 9 && counter % 1 === 0\r\n              ? \"O\"\r\n              : \"Draw\"}\r\n          </h1>\r\n        </div>\r\n        <div className={`Game ${(winner || counter === 9) && \"End\"}`}>\r\n          {items.map((item, i) => {\r\n            if (item) {\r\n              return (\r\n                <span className=\"Box Box__checked\" key={i}>\r\n                  {item}\r\n                </span>\r\n              );\r\n            }\r\n            return (\r\n              <span className=\"Box\" key={i} onClick={() => setItems(i)}>\r\n                {item}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n        <button className=\"Button\" onClick={() => getRestarted()}>\r\n          Restart\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: state.items,\r\n  counter: state.counter,\r\n  winner: state.winner,\r\n  restart: state.restart\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setItems(index) {\r\n    dispatch({\r\n      type: \"SET_ITEMS\",\r\n      index\r\n    });\r\n  },\r\n  getRestarted(bool) {\r\n    dispatch({\r\n      type: \"RESTART\",\r\n      restart: true\r\n    });\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nlet winningCombinations = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\nconst setArrayImmutable = (items, index = null, value) => {\n  return Object.assign([...items], { [index]: value });\n};\n\nconst getWinner = newItems => {\n  const filteredCombo = winningCombinations.filter(\n    combo =>\n      newItems[combo[0]] &&\n      newItems[combo[0]] === newItems[combo[1]] &&\n      newItems[combo[1]] === newItems[combo[2]]\n  );\n\n  return filteredCombo.length === 1 && newItems[filteredCombo[0][0]];\n};\n\nconst reducer = (\n  state = {\n    items: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    counter: 0,\n    winner: null,\n    restart: false\n  },\n  action\n) => {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      let counter = state.counter;\n      counter++;\n      const value = counter % 2 ? \"X\" : \"O\";\n      const newItems = setArrayImmutable(state.items, action.index, value);\n\n      return {\n        ...state,\n        items: newItems,\n        counter,\n        winner: getWinner(newItems)\n      };\n    case \"RESTART\":\n      return {\n        ...state,\n        items: Object.assign(\n          [...state.items],\n          [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n        ),\n        counter: 0,\n        winner: null\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}